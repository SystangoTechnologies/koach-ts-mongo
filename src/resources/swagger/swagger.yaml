---
openapi: 3.0.0
info:
  description: This is typescript boilerplate's API specification.
  version: 1.0.0
  title: TypeScript Boilerplate
servers:
  - url: https://localhost:3000/api/v1
    description: Local server
tags:
  - name: Users
    description: Users related API
components:
  securitySchemes:
    Bearer:
      description: Example value:- Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU5MmQwMGJhNTJjYjJjM
      type: apiKey
      name: Authorization
      in: header
paths:
  /users:
    post:
      tags:
      - Users
      summary: Add User API
      description: Add User API
      operationId: addUser
      requestBody:
        description: User Details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                userName:
                  type: string
                email:
                  type: string
                password:
                  type: string
              example:
                firstName: John
                lastName: Doe
                userName: johndoe123
                email: johndoe123@gmail.com
                password: "abcdef"
      responses:
        201:
          description: User Added Successfully
        400:
          description: Bad Request
        500:
          description: Something went wrong
  /users/_login:
    post:
      tags:
      - Users
      summary: Login API
      description: Login API
      operationId: loginUser
      requestBody:
        description: Login Details<br/>In userName property, email and userName both can be given.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userName:
                  type: string
                password:
                  type: string
              example:
                userName: johndoe123@gmail.com
                password: 'abcdef'
      responses:
        200:
          description: User Login Successfully
          headers:
            authorization:
              schema:
                type: string
              description: "Access Token for the user."
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  firstName:
                    type: string
                  lastName:
                    type: string
                  userName:
                    type: string
                  email:
                    type: string
                example:
                  _id: 5fa147e32e11f017d8aad1f7
                  firstName: John
                  lastName: Doe
                  userName: johndoe123
                  email: johndoe123@gmail.com
        400:
          description: Bad Request
        401:
          description: Unauthorized
        500:
          description: Something went wrong
  /users/{userId}:
    get:
      tags:
      - Users
      security:
       - Bearer: []
      summary: Get user info API
      description: Get user info API
      operationId: getUserInfo
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          description: User id.
          required: true
      responses:
        200:
          description: User Details
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  firstName:
                    type: string
                  lastName:
                    type: string
                  userName:
                    type: string
                  email:
                    type: string
                example:
                  _id: 5fa147e32e11f017d8aad1f7
                  firstName: John
                  lastName: Doe
                  userName: johndoe123
                  email: johndoe123@gmail.com
        400:
          description: Bad Request
        401:
          description: Unauthorized
        500:
          description: Something went wrong
    put:
      tags:
      - Users
      security:
       - Bearer: []
      summary: Update user API
      description: Update user API
      operationId: updateUser
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          description: User id.
          required: true
      requestBody:
        description: Update Details.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                userName:
                  type: string
                email:
                  type: string
              example:
                firstName: John
                lastName: Doe
                userName: johndoe
                email: johndoe123@gmail.com
      responses:
        200:
          description: Updated Successfully
        400:
          description: Bad Request
        401:
          description: Unauthorized
        500:
          description: Something went wrong
    delete:
      tags:
      - Users
      security:
       - Bearer: []
      summary: Delete user API
      description: Delete user API
      operationId: deleteUser
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          description: User id.
          required: true
      responses:
        200:
          description: Deleted Successfully
        400:
          description: Bad Request
        401:
          description: Unauthorized
        500:
          description: Something went wrong
  /users/_change-password:
    patch:
      tags:
      - Users
      security:
       - Bearer: []
      summary: Change Password API
      description: Change Password API
      operationId: changePassword
      requestBody:
        description: Change Password Details.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                newPassword:
                  type: string
              example:
                oldPassword: abcdef
                newPassword: abcdef123
      responses:
        200:
          description: Changed Password Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Updated Successfully
        400:
          description: Bad Request
        401:
          description: Unauthorized
        422:
          description: Unprocessable Entity (If old password given wrong)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Wrong Old Password
        500:
          description: Something went wrong